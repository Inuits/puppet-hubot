#!/bin/bash
# hubot
# chkconfig: 345 20 80
# description: hubot
# processname: hubot

# THIS FILE IS MAINTAINED BY PUPPET

DAEMON="<%= scope.lookupvar('hubot::executable') %>"
ROOT_DIR="<%= scope.lookupvar('hubot::root_dir') %>"
DAEMON_ADAPTER="<%= scope.lookupvar('hubot::adapter') %>"
LOG_FILE="<%= scope.lookupvar('hubot::log_file') %>"
USER=<%= scope.lookupvar('hubot::user') %>

NAME=hubot
DESC="hubot"

PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

case "$1" in
start)
        printf "%-50s" "Starting $DESC..."
        PID=`runuser -l $USER -c "source $ROOT_DIRhubot.env && cd $ROOT_DIR; $DAEMON -a $DAEMON_ADAPTER" >> $LOG_FILE 2>$1 & echo $!`
        #echo "Saving PID" $PID " to " $PIDFILE
        if [ -z $PID ]; then
            printf "%s\n" "Fail"
        else
            echo $PID > $PIDFILE
            printf "%s\n" "Ok"
        fi
;;
status)
        printf "%-50s" "Checking $DESC..."
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
                printf "%s\n" "Process dead but pidfile exists"
            else
                echo "Running"
            fi
        else
            printf "%s\n" "Service not running"
        fi
;;
stop)
        printf "%-50s" "Stopping $DESC"
            PID=`cat $PIDFILE`
        if [ -f $PIDFILE ]; then
            kill $PID
            printf "%s\n" "Ok"
            rm -f $PIDFILE
        else
            printf "%s\n" "pidfile not found"
        fi
;;

restart)
        $0 stop
        $0 start
;;

*)
        echo "Usage: $0 {status|start|stop|restart}"
        exit 1
esac
